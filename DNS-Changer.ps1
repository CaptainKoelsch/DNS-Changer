#------------------------------------------------------------------------
# Source File Information (DO NOT MODIFY)
# Source ID: 88d8f82b-566f-4e5a-bc97-32cfab7d6e24
# Source File: DNS-Changer.psf
#------------------------------------------------------------------------
#region File Recovery Data (DO NOT MODIFY)
<#RecoveryData:
rg0AAB+LCAAAAAAABADNV9Fu2jAUfZ+0f7DynEECDQwpRCpQpqldVw3KtqfKSW6oV8dGttOSfv0c
Ai0ldEkqqCYkRMw9Ocf3HNuJ+wMCfg8iHWGFkf4hCWd9o9WwDe/jB4Tc74LMCcN0TChc4hi80eXk
0/AWszmIxkJGbrNQkeP8PxAopNIF9I1JKhXEjZ+EhfxBNsZcxPm3ifb9ZaLZWshJw8o+JhomVCUC
+gwSJTA10VXiUxKcQzrld8D6freLncDp2L32CVifewZiWkrfiPT9tOK1YAMFt4SGQgOMIWdKcCrz
eWrFV4IvQKh0jTxNFJ8EmMKIxMAyNbq0YyK77TY3pWXQbzwEwxtrplLMkBJgakIeNaDd62qenlMK
ytpteC/nWAqawlIZ2zYWEWf3Wsu6/ILjcJfjJht0m6uyDabc8Asi1YAvj+451Tw+X9r/crvYlkwF
Voqw+RnDPgU96alIoNCcIvKCB1hp5YZnt03k9CpAcuM2QisA1sHoOCbak4s9JmP/KwthqTFFe5u5
VzWcwz7Q4/uWsTyHbGbVdHC17FZ9qmhctjAN7zdmnAE6x1EEILF6RANOQxO1nEVx2Za5v2d3eNX9
wnQr58DONogTq1YOWlWqd7cGNLMaRVn1AzRIlOLs6AnyVzTXjE+B0rReerZ8bPW0kZ0q7c2dfElb
2cWuXsytKnl5NrFKRHITa6i5ljAjMsF0olIKAxzcDTnl4vVltH086HMruNttwc1qdOeA+F9D84Xz
OYW3h6VeVnK2Y2ak0rawykhlLYdISE5WmoyXF6dSQqxdBLmpXY+kXiwDLijxD5AEt/l0112WPHvv
wXHwfJczZs/870Mk8IN+sHoLl9WOnKgb2XboWLiNy7l+xfRd5jTkAg5P9HSZR95tbr+feX8B8mo2
/K4NAAA=#>
#endregion

<#
    .NOTES
    --------------------------------------------------------------------------------
     Code generated by:  SAPIEN Technologies, Inc., PowerShell Studio 2016 v5.2.129
     Generated on:       03.11.2016 23:27
     Generated by:       Marcel
    --------------------------------------------------------------------------------
    .DESCRIPTION
        GUI script generated by PowerShell Studio 2016
#>
#----------------------------------------------
#region Application Functions
#----------------------------------------------

#endregion Application Functions

#----------------------------------------------
# Generated Form Function
#----------------------------------------------
function Call-DNS-Changer_psf {

	#----------------------------------------------
	#region Import the Assemblies
	#----------------------------------------------
	[void][reflection.assembly]::Load('System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089')
	[void][reflection.assembly]::Load('System.Data, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089')
	[void][reflection.assembly]::Load('System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a')
	#endregion Import Assemblies

	#----------------------------------------------
	#region Generated Form Objects
	#----------------------------------------------
	[System.Windows.Forms.Application]::EnableVisualStyles()
	$formDNSChanger = New-Object 'System.Windows.Forms.Form'
	$listbox1 = New-Object 'System.Windows.Forms.ListBox'
	$labelDNSChangerV01 = New-Object 'System.Windows.Forms.Label'
	$buttonUnoTelly = New-Object 'System.Windows.Forms.Button'
	$Google = New-Object 'System.Windows.Forms.Button'
	$InitialFormWindowState = New-Object 'System.Windows.Forms.FormWindowState'
	#endregion Generated Form Objects

	#----------------------------------------------
	# User Generated Script
	#----------------------------------------------
	
	$formDNSChanger_Load={
		#TODO: Initialize Form Controls here
		$nic = Get-DnsClientServerAddress | where { $_.AddressFamily -like "2" }
		Load-ListBox -ListBox $listbox1 -Items $nic.InterfaceAlias -DisplayMember 'InterfaceAlias' -Append 
	}
	
	$Google_Click={
		#TODO: Place custom script here
		
		Set-DNSClientServerAddress -interfaceAlias $listbox1.SelectedItem -ServerAddresses ("8.8.8.8", "8.8.4.4")
	}
	
	$buttonUnoTelly_Click={
		#TODO: Place custom script here
		Set-DNSClientServerAddress -interfaceAlias $listbox1.SelectedItem -ServerAddresses ("176.67.169.172", "178.239.178.167")
	}
	
	#region Control Helper Functions
	function Load-ListBox 
	{
	<#
		.SYNOPSIS
			This functions helps you load items into a ListBox or CheckedListBox.
	
		.DESCRIPTION
			Use this function to dynamically load items into the ListBox control.
	
		.PARAMETER  ListBox
			The ListBox control you want to add items to.
	
		.PARAMETER  Items
			The object or objects you wish to load into the ListBox's Items collection.
	
		.PARAMETER  DisplayMember
			Indicates the property to display for the items in this control.
		
		.PARAMETER  Append
			Adds the item(s) to the ListBox without clearing the Items collection.
		
		.EXAMPLE
			Load-ListBox $ListBox1 "Red", "White", "Blue"
		
		.EXAMPLE
			Load-ListBox $listBox1 "Red" -Append
			Load-ListBox $listBox1 "White" -Append
			Load-ListBox $listBox1 "Blue" -Append
		
		.EXAMPLE
			Load-ListBox $listBox1 (Get-Process) "ProcessName"
	#>
		Param (
			[ValidateNotNull()]
			[Parameter(Mandatory=$true)]
			[System.Windows.Forms.ListBox]$ListBox,
			[ValidateNotNull()]
			[Parameter(Mandatory=$true)]
			$Items,
		    [Parameter(Mandatory=$false)]
			[string]$DisplayMember,
			[switch]$Append
		)
		
		if(-not $Append)
		{
			$listBox.Items.Clear()	
		}
		
		if($Items -is [System.Windows.Forms.ListBox+ObjectCollection] -or $Items -is [System.Collections.ICollection])
		{
			$listBox.Items.AddRange($Items)
		}
		elseif ($Items -is [System.Collections.IEnumerable])
		{
			$listBox.BeginUpdate()
			foreach($obj in $Items)
			{
				$listBox.Items.Add($obj)
			}
			$listBox.EndUpdate()
		}
		else
		{
			$listBox.Items.Add($Items)	
		}
	
		$listBox.DisplayMember = $DisplayMember	
	}
	#endregion
	# --End User Generated Script--
	#----------------------------------------------
	#region Generated Events
	#----------------------------------------------
	
	$Form_StateCorrection_Load=
	{
		#Correct the initial state of the form to prevent the .Net maximized form issue
		$formDNSChanger.WindowState = $InitialFormWindowState
	}
	
	$Form_Cleanup_FormClosed=
	{
		#Remove all event handlers from the controls
		try
		{
			$buttonUnoTelly.remove_Click($buttonUnoTelly_Click)
			$Google.remove_Click($Google_Click)
			$formDNSChanger.remove_Load($formDNSChanger_Load)
			$formDNSChanger.remove_Load($Form_StateCorrection_Load)
			$formDNSChanger.remove_FormClosed($Form_Cleanup_FormClosed)
		}
		catch [Exception]
		{ }
	}
	#endregion Generated Events

	#----------------------------------------------
	#region Generated Form Code
	#----------------------------------------------
	$formDNSChanger.SuspendLayout()
	#
	# formDNSChanger
	#
	$formDNSChanger.Controls.Add($listbox1)
	$formDNSChanger.Controls.Add($labelDNSChangerV01)
	$formDNSChanger.Controls.Add($buttonUnoTelly)
	$formDNSChanger.Controls.Add($Google)
	$formDNSChanger.AutoScaleDimensions = '6, 13'
	$formDNSChanger.AutoScaleMode = 'Font'
	$formDNSChanger.ClientSize = '397, 195'
	$formDNSChanger.Name = 'formDNSChanger'
	$formDNSChanger.Text = 'DNS-Changer'
	$formDNSChanger.add_Load($formDNSChanger_Load)
	#
	# listbox1
	#
	$listbox1.FormattingEnabled = $True
	$listbox1.Location = '13, 59'
	$listbox1.Name = 'listbox1'
	$listbox1.Size = '365, 95'
	$listbox1.TabIndex = 3
	#
	# labelDNSChangerV01
	#
	$labelDNSChangerV01.AutoSize = $True
	$labelDNSChangerV01.Font = 'Yanone Kaffeesatz Bold, 25pt'
	$labelDNSChangerV01.Location = '13, 13'
	$labelDNSChangerV01.Name = 'labelDNSChangerV01'
	$labelDNSChangerV01.Size = '197, 40'
	$labelDNSChangerV01.TabIndex = 2
	$labelDNSChangerV01.Text = 'DNS-Changer V0.1'
	#
	# buttonUnoTelly
	#
	$buttonUnoTelly.Location = '129, 160'
	$buttonUnoTelly.Name = 'buttonUnoTelly'
	$buttonUnoTelly.Size = '75, 23'
	$buttonUnoTelly.TabIndex = 1
	$buttonUnoTelly.Text = 'UnoTelly'
	$buttonUnoTelly.UseVisualStyleBackColor = $True
	$buttonUnoTelly.add_Click($buttonUnoTelly_Click)
	#
	# Google
	#
	$Google.Location = '12, 160'
	$Google.Name = 'Google'
	$Google.Size = '75, 23'
	$Google.TabIndex = 0
	$Google.Text = 'Google'
	$Google.UseVisualStyleBackColor = $True
	$Google.add_Click($Google_Click)
	$formDNSChanger.ResumeLayout()
	#endregion Generated Form Code

	#----------------------------------------------

	#Save the initial state of the form
	$InitialFormWindowState = $formDNSChanger.WindowState
	#Init the OnLoad event to correct the initial state of the form
	$formDNSChanger.add_Load($Form_StateCorrection_Load)
	#Clean up the control events
	$formDNSChanger.add_FormClosed($Form_Cleanup_FormClosed)
	#Show the Form
	return $formDNSChanger.ShowDialog()

} #End Function

#Call the form
Call-DNS-Changer_psf | Out-Null
